-- Highest Roblox velocity is 128^2 or 16384
local velMax = (128 ^ 2)

-- Time to release and choke the replication packets
local timeRelease = 0.015
local timeChoke = 0.105

-- Aliases and utilities
local Property = sethiddenproperty
local Wait = task.wait
local Radian = math.rad
local Random = math.random
local Ceil = math.ceil
local Angle = CFrame.Angles
local Vector = Vector3.new
local Service = game.GetService

-- Services
local Run = Service(game, 'RunService')
local Players = Service(game, 'Players')
local Input = Service(game, 'UserInputService')
local Ping = Service(game, 'Stats').PerformanceStats.Ping.GetValue
local Player = Players.LocalPlayer
local Root = Player.Character.HumanoidRootPart

-- Toggle state
local toggled = false
local runBeatCon = nil

-- Client replication choking/sleeping
local function Sleep()
    Property(Root, 'NetworkIsSleeping', true)
end

-- Initialization
local function Init()
    local rootVel = Root.Velocity
    local rootAng = Random(-180, 180)
    local rootOffset = Vector(
        Random(-velMax, velMax),
        -Random(0, velMax),
        Random(-velMax, velMax)
    )

    Root.CFrame *= Angle(0, Radian(rootAng), 0)
    Root.Velocity = rootOffset

    -- Synchronize velocity before rendering
    Run.RenderStepped:Wait()
    Root.CFrame *= Angle(0, Radian(-rootAng), 0)
    Root.Velocity = rootVel
end

-- Toggle functionality
local function Toggle()
    toggled = not toggled
    if toggled then
        -- Activate functionality
        runBeatCon = Run.Heartbeat:Connect(function()
            Init()

            -- Stable replication packets
            local chokeClient = Run.Heartbeat:Connect(Sleep)
            local chokeServer = Run.RenderStepped:Connect(Sleep)

            -- Ping-based choke time
            Wait(Ceil(Ping()) / 1000)

            -- Disconnect choke connections
            chokeClient:Disconnect()
            chokeServer:Disconnect()
        end)
    else
        -- Deactivate functionality
        if runBeatCon then
            runBeatCon:Disconnect()
            runBeatCon = nil
        end
    end
end

-- Key binding
Input.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.B then
        Toggle()
    end
end)
